<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.0" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">

	<!-- CONFIG CDI -->
<!-- 	<listener> -->
<!--    		<listener-class>org.jboss.weld.environment.servlet.Listener</listener-class> -->
<!-- 	</listener> -->
	
	<listener>
        <listener-class>
            org.agoncal.application.petstore.servlet.listener.PetstoreServletListener
        </listener-class>
    </listener>
    
	<resource-env-ref>
   		<resource-env-ref-name>BeanManager</resource-env-ref-name>
   		<resource-env-ref-type>javax.enterprise.inject.spi.BeanManager</resource-env-ref-type>
	</resource-env-ref>

	<!-- CONFIG JAX-RS avec RESTeasy -->
	<listener>
        <listener-class>
            org.jboss.resteasy.plugins.server.servlet.ResteasyBootstrap
        </listener-class>
    </listener>
    <servlet>
        <servlet-name>Resteasy</servlet-name>
        <servlet-class>org.jboss.resteasy.plugins.server.servlet.HttpServletDispatcher</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>Resteasy</servlet-name>
        <url-pattern>/restful-services/*</url-pattern>
    </servlet-mapping>    
    <context-param>
         <param-name>resteasy.scan</param-name>
        <param-value>true</param-value>    
    </context-param>    
    <context-param>
        <param-name>resteasy.servlet.mapping.prefix</param-name>
        <param-value>/restful-services</param-value>
    </context-param>	
    
    <!-- CONFIGURATION DERBY FOR TOMCAT -->
    <resource-ref>
	  <description>
	    This element references a resource factory for a data
	    source that provides java.sql.Connection instances that
	    connect to a particular database that is configured in
	    the server.xml file. Its resource reference name must match
	    the resource name defined there. By using a resource
	    reference, the servlets and JavaServer pages remain
	    independent of the JDBC driver names and JDBC URLs while
	    gaining the performance advantage of a connection pool.
	  </description>
	  <res-ref-name>jdbc/JPetStoreDB</res-ref-name>
	  <res-type>javax.sql.DataSource</res-type>
	  <res-auth>Container</res-auth>
  	</resource-ref>
  
	<!-- To let MyFaces auto start it needs some JSF annotation (@ManagedBean) 
		instead of CDI @Named) -->
	<servlet>
		<servlet-name>Faces Servlet</servlet-name>
		<servlet-class>javax.faces.webapp.FacesServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>Faces Servlet</servlet-name>
		<url-pattern>*.xhtml</url-pattern>
	</servlet-mapping>

	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
	</welcome-file-list>
</web-app>
